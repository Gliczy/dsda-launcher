# This is a basic workflow to help you get started with Actions

name: CI

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- name: Install correct version of mingw
      #  run: |
      #    choco install qt5-default
      #    choco uninstall mingw --force
      #    choco uninstall strawberryperl --force
      #- uses: numworks/setup-msys2@v1
      #  with:
      #    msystem: MINGW32
      #C:\Qt\5.15.2\mingw81_64\bin\qmake.exe ..
      #- name: Install Qt
      #  uses: jurplel/install-qt-action@v2.14.0
      #  with:
      #    version: '6.1'
      #    host: 'windows'
      #    target: 'desktop'
      #    arch: 'win64_mingw81'
      #    setup-python: 'false'
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install qt
        run: | 
          pip install yaqti &&
          python -m yaqti install --version 6.2.0 --platform desktop --os windows
      
      - name: tree
        run: |
          where make.exe
          cd \
          tree /F
      - uses: actions/checkout@v2
      - name: build
        run: |
          cd dsda-launcher
          mkdir build
          cd build
          qmake.exe ..
          make.exe
          tree /F
          windeployqt.exe dsda-launcher.exe
          Compress-Archive -path .\* -destination .\win.zip
          dir
      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: dsda-launcher\build\win.zip


